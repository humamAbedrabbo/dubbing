@model dubbingModel.orderTrnDtl

<div class="container-fluid" style="padding:0px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>Edit Assignment</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("assignmentUpdate", "workLoad",
                new { dtlIntno = ViewBag.dtlIntno, _workIntno = ViewBag.workIntno },
                new AjaxOptions()
                {
                    HttpMethod = "POST",
                    OnSuccess = "onUpdateSuccess",
                    UpdateTargetId = "resourceAssignmentsList"
                },
                new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                
                <p>
                    <small><label>Work: </label>@ViewBag.workName</small>
                    <span><small><label> / Episode: </label>@ViewBag.episodeNo</small></span>
                </p>

                if (!string.IsNullOrEmpty(Model.fromTimeCode))
                {
                    <div class="form-group-sm">
                        <label class="control-label">Start Time Code</label>
                        <div>
                            <input type="text" step="1" class="form-control" name="fromTimeCode" value="@Model.fromTimeCode" />
                        </div>
                    </div>

                        <div class="form-group-sm">
                            <label class="control-label">End Time Code</label>
                            <div>
                                <input type="text" step="1" class="form-control" name="thruTimeCode" value="@Model.thruTimeCode" />
                            </div>
                        </div>
                }

                <div class="form-group-sm">
                    <label class="control-label">Assign To</label>
                    <div>
                        @Html.DropDownListFor(m => m.empIntno, ViewBag.resourcesList as SelectList, htmlAttributes: new { @class = "form-control", @id = "resourcesCombo", required = "true" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <label class="control-label">Assigned Date</label>
                    <div>
                        <input type="date" class="form-control" name="assignedDate" value="@Model.assignedDate.Value.ToString("yyyy-MM-dd")" required />
                    </div>
                </div>

                <div class="form-group-sm">
                    <label class="control-label">Due Date</label>
                    <div>
                        @{string dueDate = @Model.forDueDate.HasValue ? @Model.forDueDate.Value.ToString("yyyy-MM-dd") : null;
                        }
                        <input type="date" class="form-control" name="forDueDate" value="@dueDate" required />
                    </div>
                </div>
                
                <div class="form-group-sm">
                    <div>
                        <button type="submit" class="btn btn-default">Submit</button>
                    </div>
                </div>

                <span>
                    <small><label class="alert-success" id="updateFormResult"></label></small>
                </span>
            }
        </div>
    </div>
</div>

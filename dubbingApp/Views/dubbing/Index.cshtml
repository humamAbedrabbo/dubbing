@model IEnumerable<dubbingApp.Models.ViewModels.assignmentViewModel>

@{
    ViewBag.Title = "Dubbing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="jumbotron" style="padding:5px">
        <h2>Dubbing Assignments Index</h2>
        <p class="lead"><h5>Select the appropriate entry point to studio.</h5></p>
    </div>

    @*scheduled assignments*@
    <div class="row">
        <div class="col-sm-12">
            <div class="container-fluid" style="padding:0px">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-12">
                                <label>Scheduled</label> &nbsp; <small>Episodes that are Scheduled for Dubbing This Week</small>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            @foreach (var work in Model.Where(b => b.status == "SCHEDULED").Select(b => new { b.workIntno, b.workName, b.studioEpisodeIntno, b.studioNo, b.schedule, b.dueDate }).Distinct())
                            {
                                <div class="col-sm-4">
                                    <div class="container-fluid" style="padding:0px">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <div class="col-sm-10">
                                                        <label><small>@work.workName &nbsp; (Due Date: @work.dueDate)</small></label>
                                                    </div>
                                                    <div class="col-sm-2">
                                                        @{ long oiDtl = Model.FirstOrDefault(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "SCHEDULED").orderTrnDtlIntno; }
                                                        <button class="btn btn-default btn-xs pull-right" onclick="onStartClick(@oiDtl, @work.studioEpisodeIntno)">
                                                            Start
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <p>
                                                    <div class="row">
                                                        <div class="col-sm-6"><small><label>Studio</label>@work.studioNo</small></div>
                                                        <div class="col-sm-6"><small><label>Schedule</label>@work.schedule</small></div>
                                                    </div>
                                                </p>
                                                @foreach (var ep in Model.Where(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "SCHEDULED"))
                                                {
                                                    <label class="badge alert-info">@ep.episodeNo</label>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*due - not scheduled assignments*@
    <div class="row">
        <div class="col-sm-12">
            <div class="container-fluid" style="padding:0px">
                <div class="panel panel-danger">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-12">
                                <label>Due - Not Scheduled</label> &nbsp; <small>Episodes that are Due Starting from Today, But are NOT Scheduled for Dubbing This Week</small>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            @foreach (var work in Model.Where(b => b.status == "DUE").Select(b => new { b.workIntno, b.workName, b.dueDate }).Distinct())
                            {
                                <div class="col-sm-4">
                                    <div class="container-fluid" style="padding:0px">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <div class="col-sm-10">
                                                        <label><small>@work.workName &nbsp; (Due Date: @DateTime.Parse(@work.dueDate).ToString("dd/MM"))</small></label>
                                                    </div>
                                                    <div class="col-sm-2">
                                                        @{ long oiDtl = Model.FirstOrDefault(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "DUE").orderTrnDtlIntno; }
                                                        <button class="btn btn-default btn-xs pull-right" onclick="onStartClick(@oiDtl, null)">
                                                            Start
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                @foreach (var ep in Model.Where(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "DUE"))
                                                {
                                                    <label class="badge alert-info">@ep.episodeNo</label>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*assignments - not scheduled, not due*@
    <div class="row">
        <div class="col-sm-12">
            <div class="container-fluid" style="padding:0px">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-12">
                                <label>Assigned</label> &nbsp; <small>Episodes that are Assigned But NOT Scheduled NOR Due for this Dubbing Week</small>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            @foreach (var work in Model.Where(b => b.status == "ASSIGNED").Select(b => new { b.workIntno, b.workName, b.dueDate }).Distinct())
                            {
                                <div class="col-sm-4">
                                    <div class="container-fluid" style="padding:0px">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <div class="col-sm-10">
                                                        <label><small>@work.workName &nbsp; (Due Date: @work.dueDate)</small></label>
                                                    </div>
                                                    <div class="col-sm-2">
                                                        @{ long oiDtl = Model.FirstOrDefault(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "ASSIGNED").orderTrnDtlIntno; }
                                                        <button class="btn btn-default btn-xs pull-right" onclick="onStartClick(@oiDtl, null)">
                                                            Start
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                @foreach (var ep in Model.Where(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate && b.status == "ASSIGNED"))
                                                {
                                                    <label class="badge alert-info">@ep.episodeNo</label>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/dubbing/busySpinner.js"></script>

    <script>
        //global ajax callback events handlers
        // to exclude specific ajax call write: "global: false," in the begining of ajax function
        $(document).ajaxStart(function () {
            ajaxIndicatorStart('loading data.. please wait..');
        }).ajaxComplete(function () {
            ajaxIndicatorStop();
        });
        
        function onStartClick(oiDtl, std1) {
            if (std1 === null)
            {
                window.location.href = "/dubbing/studio?id=" + oiDtl;
            }
            else
            {
                window.location.href = "/dubbing/studio?id=" + oiDtl + "&std=" + std1;
            }
        }
    </script>
}
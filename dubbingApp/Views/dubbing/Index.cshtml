@model IEnumerable<dubbingApp.Models.ViewModels.assignmentViewModel>

@{
    ViewBag.Title = "Dubbing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="jumbotron" style="padding:5px">
        <h2>Dubbing Assignments Index</h2>
        <p class="lead"><h5>Select the appropriate entry point to studio.</h5></p>
    </div>

    <div>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th></th>
                    <th><small>Work</small></th>
                    <th><small>Schedule</small></th>
                    <th><small>Studio</small></th>
                    <th><small>Due Date</small></th>
                    <th><small>Episodes</small></th>
                    <th><small>Status</small></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var work in Model.Select(b => new { b.workIntno, b.workName, b.studioNo, b.schedule, b.dueDate, b.status }).Distinct())
                {
                    <tr>
                        <td>
                            @{ var w1 = Model.FirstOrDefault(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate); }
                            <button class="btn btn-default btn-xs pull-right" onclick="onStartClick(@w1.orderTrnDtlIntno, '@w1.studioEpisodeIntno')">
                                Start
                            </button>
                        </td>
                        <td><small>@work.workName</small></td>
                        <td><small>@work.schedule</small></td>
                        <td><small>@work.studioNo</small></td>
                        <td><small>@work.dueDate</small></td>
                        <td>
                            @foreach (var ep in Model.Where(b => b.workIntno == work.workIntno && b.dueDate == work.dueDate))
                            {
                                <label class="badge alert-info">@ep.episodeNo</label>
                            }
                        </td>
                        <td>
                            @{ 
                                string statusColor = "alert-info";
                                if (work.status == "SHEDULED") { statusColor = "alert-success"; }
                                if (work.status == "DUE") { statusColor = "alert-danger"; }
                                <label class="badge @statusColor">@work.status</label>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function onStartClick(oiDtl, std1) {
            if (std1 === null)
            {
                window.location.href = "/dubbing/studio?id=" + oiDtl;
            }
            else
            {
                window.location.href = "/dubbing/studio?id=" + oiDtl + "&std=" + std1;
            }
        }
    </script>
}
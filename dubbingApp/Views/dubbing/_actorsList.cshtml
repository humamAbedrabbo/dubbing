@model IEnumerable <dubbingModel.dubbingAppointment>
@{ int id = 0; }

<div class="container-fluid" style="padding:0px">
    <ul style="padding-left:15px">
        @foreach (var actor in Model.Select(b => new { b.voiceActorIntno, b.actorName }).Distinct())
        {
            id++;
            string actorId = "D" + id.ToString();
            string actorName = '"' + actor.actorName + '"';
            string actorApt = null;
            string fromTime;
            string thruTime;
            foreach(var apt in Model.Where(b => b.voiceActorIntno == actor.voiceActorIntno && b.actorName == actor.actorName))
            {
                fromTime = apt.fromTime.HasValue ? apt.fromTime.Value.ToShortTimeString() : "00:00";
                thruTime = apt.thruTime.HasValue ? apt.thruTime.Value.ToShortTimeString() : "00:00";
                if (string.IsNullOrEmpty(actorApt))
                {
                    actorApt = "[" + apt.appointmentDate.ToString("dd/MM") + " @ " + fromTime + " - " + thruTime + "]";
                }
                else
                {
                    actorApt = actorApt +  " [" + apt.appointmentDate.ToString("dd/MM") + " @ " + fromTime + " - " + thruTime + "]";
                }
            }
            <li>
                <a class="actorLbl" id="@actorId" onclick="onActorSelectClick(@actor.voiceActorIntno, @actorName)" href="#" title="@actorApt">@actor.actorName</a>
            </li>
        }
    </ul>
</div>



@model dubbingModel.employee

<div class="container-fluid" style="padding:0px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <small>Update Personnel Info</small>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("personnelUpdate", "personnel",
                                            new AjaxOptions()
                                            {
                                                HttpMethod = "POST",
                                                UpdateTargetId = "result",
                                                OnSuccess = "onSuccess"
                                            },
                                            new { @class = "form-horizontal" }
                                            ))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.empIntno)

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.empType, "Category", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.empType, new SelectList(ViewBag.empTypesList, "key", "value"), htmlAttributes: new { @class = "form-control", required = "true", autofocus = "" })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.fullName, "Name", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.othFullName, "Other Name", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.othFullName, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.empUID, "Employee UID", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.empUID, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional: For Employees Only, if Available ..." } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.mobileNo, "Mobile", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.landLineNo, "Landline", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.landLineNo, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.email, "email", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.accountNo, "Account No", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.accountNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Optional: For Accounting Purpose Only." } })
                    </div>
                </div>

                <br />
                <div class="form-group-sm">
                    <button type="submit" class="btn btn-default btn-sm pull-left">Submit</button>
                    <label class="alert-success" id="result"></label>
                </div>
            }
        </div>
    </div>
</div>

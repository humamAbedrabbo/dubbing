@model dubbingModel.payment
@{ 
    string paymentDate = Model.paymentDate.HasValue ? Model.paymentDate.Value.ToString("yyyy-MM-dd") : null;
    string actorName = '"' + Model.fullName + '"';
}

<div class="container-fluid" style="padding:0px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">Payment Update</div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("paymentsUpdate", "payment",
                                            new AjaxOptions()
                                            {
                                                HttpMethod = "POST",
                                                UpdateTargetId = "formResult",
                                                OnSuccess = "onPaymentSuccess(" + Model.voiceActorIntno + "," + actorName + ")" 
                                            }
                                            ))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.paymentIntno)

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.paymentDate, "Payment Date", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="date" name="paymentDate" class="form-control" value="@paymentDate" />
                        @Html.ValidationMessageFor(model => model.paymentDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <small>@Html.LabelFor(model => model.accountNo, "Account No", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @Html.EditorFor(model => model.accountNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.accountNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <small>@Html.LabelFor(model => model.deduction, "Deduction", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @Html.EditorFor(model => model.deduction, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.deduction, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <small>@Html.LabelFor(model => model.paymentDesc, "Payment Description", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @Html.EditorFor(model => model.paymentDesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.paymentDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="form-group-sm">
                    <button type="submit" name="updateBtn" class="btn btn-default btn-sm pull-left" value="1">Update Payment</button>
                    <button type="submit" name="updateBtn" class="btn btn-default btn-sm pull-left" value="2">Endorse Payment</button>
                    <button type="submit" name="updateBtn" class="btn btn-default btn-sm pull-left" value="3">Delete Payment</button>
                    <br /><br />
                    <p>
                        <small><label class="alert-success" id="formResult"></label></small>
                    </p>
                </div>
                <br />
            }

        </div>
    </div>
</div>

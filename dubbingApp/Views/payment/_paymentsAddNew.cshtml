@model dubbingModel.payment
@{ 
    string paymentDate = Model.paymentDate.Value.ToString("dd-MM-yyyy");
}

<div class="container-fluid" style="padding:0px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10"><small><label>New Payment Voucher</label></small></div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body" style="padding:10px">
            @using (Ajax.BeginForm("paymentsAddNew", "payment",
                                            new AjaxOptions()
                                            {
                                                HttpMethod = "POST",
                                                UpdateTargetId = "paymentsDueList",
                                                OnSuccess = "onSuccess" 
                                            },
                                            new { @class = "form-horizontal" }
                                            ))
            {
                @Html.AntiForgeryToken()

                <input type="hidden" name="workIntno" value="@Model.workIntno" />
                <input type="hidden" name="voiceActorIntno" value="@Model.voiceActorIntno" />
                <input type="hidden" name="costCenterType" value="@Model.costCenterType" />
                
                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.paymentDate, "Payment Date", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="paymentDate" class="form-control" value="@paymentDate" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.fullName, "Account Name", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="fullName" class="form-control" value="@Model.fullName" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.workIntno, "Work (Contract)", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" class="form-control" value="@ViewBag.workName" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.totalScenes, "Total Scenes", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="totalScenes" id="totalScenes1" class="form-control" value="@Model.totalScenes" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.unitRate, "Unit Rate", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @if (Model.unitRate == 0)
                        {
                            <input type="text" name="unitRate" id="unitRate1" class="form-control" value="@Model.unitRate" onchange="onVoucherChange()" required autofocus />
                        }
                        else
                        {
                            <input type="text" name="unitRate" id="unitRate1" class="form-control" value="@Model.unitRate" disabled />
                        }
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.currencyCode, "Currency", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @if (string.IsNullOrEmpty(Model.currencyCode))
                        {
                            @Html.DropDownListFor(model => model.currencyCode, ViewBag.currenciesList as SelectList, htmlAttributes: new { @class = "form-control", required = "true" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.currencyCode, ViewBag.currenciesList as SelectList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                        }
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.deduction, "Total Deductions", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="deduction" id="deduction1" class="form-control" value="@Model.deduction" onchange="onVoucherChange()" required />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.totalAmount, "Total Amount", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="totalAmount" id="totalAmount1" class="form-control" value="@Model.totalAmount" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.accountNo, "Account No", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @if (Model.accountNo == "---")
                        {
                            <input type="text" name="accountNo" class="form-control" value="@Model.accountNo" required />
                        }
                        else
                        {
                            <input type="text" name="accountNo" class="form-control" value="@Model.accountNo" disabled />
                        }
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.costCenterType, "Cost Center", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" class="form-control" value="@ViewBag.costCenterType" disabled />
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.paymentDesc, "Payment Description", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        <input type="text" name="paymentDesc" class="form-control" value="@Model.paymentDesc" />
                    </div>
                </div>

                <br />
                <div class="form-group-sm">
                    <div class="btn-group-sm">
                        <button type="submit" class="btn btn-primary" tabindex="-1">Confirm</button>
                        <button type="button" class="btn btn-default" onclick="onCloseClick()" tabindex="-1">Cancel</button>
                    </div>
                    <p>
                        <small><label class="alert-success" id="formResult"></label></small>
                    </p>
                </div>
            }
        </div>
    </div>
</div>

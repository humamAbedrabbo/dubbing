@model dubbingModel.workActor

<div class="container-fluid">
    @using (Ajax.BeginForm("actorUpdate", "casting",
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    UpdateTargetId = "result"
                                                },
                                                new { @class = "form-horizontal" }
                                                ))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.workActorIntno)
        @Html.HiddenFor(m => m.workIntno)
        @Html.HiddenFor(m => m.workCharacterIntno)

        <div class="form-group">
            <small>@Html.LabelFor(model => model.fromDate, "Since", htmlAttributes: new { @class = "control-label col-sm-4" })</small>
            <div class="col-sm-8">
                <small>
                    <input type="date" name="fromDate" class="form-control" value='@Model.fromDate.ToString("yyyy-MM-dd")' />
                    @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <small>@Html.LabelFor(model => model.scenesPerHour, "Scene / Hour", htmlAttributes: new { @class = "control-label col-sm-4" })</small>
            <div class="col-sm-8">
                <small>
                    @Html.EditorFor(model => model.scenesPerHour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.scenesPerHour, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <small>@Html.LabelFor(model => model.remarks, "Remarks", htmlAttributes: new { @class = "control-label col-sm-4" })</small>
            <div class="col-sm-8">
                <small>
                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <button type="submit" class="btn btn-default btn-sm">Submit</button>
                &nbsp;
                <a class="btn btn-default btn-sm" onclick="onDismissClick(@Model.workIntno)" role="button">Dismiss</a>
                <label class="alert-success" id="result"></label>
            </div>
        </div>
    }
</div>
@model dubbingModel.workActor

<div class="container-fluid" style="padding:0px">
    <div class="panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>Update Casting</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">

        </div>
    </div>
    @using (Ajax.BeginForm("actorUpdate", "casting",
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    OnSuccess = "onSuccess"
                                                }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.workActorIntno)
        @Html.HiddenFor(m => m.workIntno)
        @Html.HiddenFor(m => m.workCharacterIntno)

        <div class="form-group">
            <small>@Html.LabelFor(model => model.fromDate, "Since", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
            <div class="col-sm-12">
                <small>
                    <input type="date" name="fromDate" class="form-control" value='@Model.fromDate.ToString("yyyy-MM-dd")' />
                    @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <small>@Html.LabelFor(model => model.scenesPerHour, "Scene / Hour", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
            <div class="col-sm-12">
                <small>
                    @Html.EditorFor(model => model.scenesPerHour, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.scenesPerHour, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <small>@Html.LabelFor(model => model.remarks, "Remarks", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
            <div class="col-sm-12">
                <small>
                    @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                </small>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <button type="submit" class="btn btn-default btn-sm">Submit</button>
                <label class="alert-success" id="formResult"></label>
            </div>
        </div>
    }
</div>
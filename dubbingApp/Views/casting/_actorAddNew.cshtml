@model dubbingModel.workActor

<div class="container-fluid" style="padding:0px">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>New Casting</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("actorAddNew", "casting",
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    OnSuccess = "onSuccess"
                                                },
                                                new { @class = "form-horizontal" }
                                                ))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.workIntno)
                @Html.HiddenFor(model => model.workCharacterIntno)

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.voiceActorIntno, "Voice Actor", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.voiceActorIntno, ViewBag.actorsList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control", required = "true", autofocus = "" })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.fromDate, "Since", htmlAttributes: new { @class = "control-label" })
                    <div>
                        <input type="date" name="fromDate" class="form-control" required />
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.scenesPerHour, "Scene / Hour", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.scenesPerHour, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    @Html.LabelFor(model => model.remarks, "Remarks", htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group-sm">
                    <button type="submit" class="btn btn-default btn-sm">Submit</button>
                    <label class="alert-success" id="formResult"></label>
                </div>
            }
        </div>
    </div>
</div>
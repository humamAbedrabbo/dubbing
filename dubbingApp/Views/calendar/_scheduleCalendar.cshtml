@model IEnumerable<dubbingModel.dubbingAppointment>

<style>
    .divScroll {
    overflow-x:auto;
    height:auto;
    width:100%;
}
</style>

@{ 
    DateTime scheduleStartDate = ViewBag.scheduleStartDate;
}
<div class="container-fluid divScroll" style="padding:0px">
    <table class="table table-condensed">
        <thead>
            <tr>
                <th><small>Std</small></th>
                @for (int i = 0; i < 7; i++)
                {
                    <th><small>@scheduleStartDate.AddDays(i).DayOfWeek</small></th>
                }
            </tr>
        </thead>
        <tbody>
            @{ string fromTime; string thruTime; }
            @foreach(var std in ViewBag.studiosList)
            {
                <tr>
                    <td style="background-color:silver"><label><small>@std.domainCode</small></label></td>
                    @for (int i = 0; i < 7; i++)
                    {
                        <td>
                            <ul class="list-unstyled">
                                @foreach (var item in Model.Where(b => b.appointmentDate == scheduleStartDate.AddDays(i) && b.studio.studioNo == std.domainCode).OrderBy(b => b.fromTime))
                                {
                                    fromTime = item.fromTime.HasValue ? item.fromTime.Value.ToString("HH:mm") : null;
                                    thruTime = item.thruTime.HasValue ? item.thruTime.Value.ToString("HH:mm") : null;
                                    <li><label><small>@fromTime-@thruTime:</small></label>&nbsp;<small>@item.actorName</small></li>
                                }
                            </ul>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

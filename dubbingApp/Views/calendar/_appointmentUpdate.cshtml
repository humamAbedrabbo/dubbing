@model dubbingModel.dubbingAppointment

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <div class="col-sm-10"><label><small>Update Appointment &amp; Attendance Information</small></label></div>
            <div class="col-sm-2">
                <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    </div>
    <div class="panel-body">
        @using (Ajax.BeginForm("appointmentUpdate", "calendar",
                                            new AjaxOptions()
                                            {
                                                HttpMethod = "POST",
                                                OnSuccess = "onAppointmentUpdateSuccess",
                                                OnFailure = "onAppointmentUpdateFailure"
                                            }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.dubbAppointIntno)
            @Html.HiddenFor(model => model.voiceActorIntno)
            @Html.HiddenFor(model => model.workIntno)

            <div class="form-group-sm">
                <small>@Html.LabelFor(model => model.fromTime, "Arrival", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                <div class="col-sm-8">
                    <small>
                        <input type="time" name="fromTime" class="form-control"/>
                        @Html.ValidationMessageFor(model => model.fromTime, "", new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="form-group-sm">
                <small>@Html.LabelFor(model => model.actualFromTime, "Actual Arrival", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                <div class="col-sm-8">
                    <small>
                        <input type="time" name="actualFromTime" class="form-control" />
                        @Html.ValidationMessageFor(model => model.actualFromTime, "", new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="form-group-sm">
                <small>@Html.LabelFor(model => model.actualThruTime, "Departure", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                <div class="col-sm-8">
                    <small>
                        <input type="time" name="actualThruTime" class="form-control" />
                        @Html.ValidationMessageFor(model => model.actualThruTime, "", new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="form-group-sm">
                <small>@Html.LabelFor(model => model.studioIntno, "Studio", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                <div class="col-sm-8">
                    <small>
                        @Html.DropDownListFor(model => model.studioIntno, ViewBag.studiosList as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.studioIntno, "", new { @class = "text-danger" })
                    </small>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-12">
                    <button type="submit" class="btn btn-default btn-xs">Update</button>
                    <small><label class="alert-success" id="result"></label></small>
                </div>
            </div>
        }
    </div>
</div>

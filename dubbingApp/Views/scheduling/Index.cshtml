@{
    ViewBag.Title = "Scheduling";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="jumbotron" style="padding:5px">
        <h2>Dubbing Schedular</h2>
        <p class="lead"><h5>Optimize Dubbing Scheduling Through Balancing the Allocation of the Different Resources; Works, Studios &amp; Studio Teams, to Perform the Dubbing on Planned / Ready Episodes.</h5></p>
        <label><a href="#" onclick="onSchedulesAddNewClick()">Create New Schedule ...</a></label>
    </div>

    <div class="row">
        <div class="col-md-10 col-md-offset-2" id="stdList"></div>
    </div>
    <br />

    <div class="row">
        <div class="col-md-2" id="schList">
            @Html.Action("schedulesList", "scheduling")
        </div>

        <div class="col-md-6" id="epList">
            <div class="col-sm-12">
                <label>
                    <span class="glyphicon glyphicon-lamp alert-warning"></span>
                    <small>Tips ...</small>
                </label>
            </div>

            <p class="col-sm-12">
                <span class="glyphicon glyphicon-download-alt"></span>
                <small>
                    When Creating a New Schedule, the Center Pane will be Automatically populated by ALL Active Dubbing Works. Start by Adding Episodes you intend to Schedule in the respective Work Pane. A List of Available Episodes will be Shown on the right pane when this button is clicked.
                </small>
            </p>
            <p class="col-sm-12">
                <small>
                    &bull; First: Allocate Your Studios, one by one, Selecting the Planned Works and the Studio Team. Use the Add Button "+" to add more Works / Teams
                </small>
            </p>
            <p class="col-sm-12">
                <small>
                    &bull; Click the Episodes &radic; and &times; Buttons to Include / Exclude the Allocation of an Episode from a Studio.
                </small>
            </p>
            <p class="col-sm-12">
                <small>
                    &bull; Once You Are Satisfied with the Schedule in hand; Clicking on the Schedule Link Will Show the Schedule Bulleting on the right Pane where You can Generate a First Draft of the Dubbing Calendar. This Calendar will Help in Setting Appointments with the Concerned Actors to Perform the Dubbing Activities as per the Schedule.
                </small>
            </p>
        </div>
        <div class="col-md-4" id="details"></div>
    </div>

</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $(".schedule").click(function () {
                $('.schedule').css('background-color', 'white');
                var id = $(this).attr('id');
                $('#' + id).css('background-color', 'silver');
            })
        })
        function onCloseClick(section) {
            var x = '#' + section;
            $(x).html(null);
            $('#details').html(null);
        }

        // schedules
        function onScheduleSelectClick(sch1) {
            $.ajax({
                url: '@Url.Action("episodesList", "scheduling")',
                type: 'GET',
                data: { sch: sch1 },
                success: function (result) {
                    $('#epList').html(result);
                }
            });
            $.ajax({
                url: '@Url.Action("scheduleDetails", "scheduling")',
                type: 'GET',
                data: { sch: sch1 },
                success: function (result) {
                    $('#details').html(result);
                }
            });
            $.ajax({
                url: '@Url.Action("studiosList", "scheduling")',
                type: 'GET',
                data: { sch: sch1 },
                success: function (result) {
                    $('#stdList').html(result);
                }
            })
        }
        function onSchedulesAddNewClick() {
            $.ajax({
                url: '@Url.Action("schedulesAddNew", "scheduling")',
                type: 'GET',
                success: function (result) {
                    $('#details').html(result);
                }
            })
        }
        function onScheduleSuccess() {
            $.ajax({
                url: '@Url.Action("schedulesList", "scheduling")',
                type: 'GET',
                success: function (result) {
                    $('#schList').html(result);
                }
            });
            $('#details').html(null);
        }
        function onScheduleFailure() {
            $('#result').html("Failed! Please Provide Starting Date which Conforms to System Settings and is NOT Already Scheduled.");
        }
        function onSchedulesDeleteClick(schedule1) {
            if (confirm("Please Confirm! About to Delete the Selected Schedule.")) {
                $.ajax({
                    url: '@Url.Action("schedulesDelete", "scheduling")',
                    type: 'GET',
                    data: { schedule: schedule1 },
                    success: function (result) {
                        $('#schList').html(result);
                        $('#epList').html(null);
                        $('#stdList').html(null);
                        $('#details').html(null);
                    }
                });
            }
        }

        //works and episodes
        function onEpisodesAddNewClick(work1, schedule1) {
            $.ajax({
                url: '@Url.Action("episodesAddNew", "scheduling")',
                type: 'GET',
                data: { work: work1, schedule: schedule1 },
                success: function (result) {
                    $('#details').html(result);
                }
            })
        }
        function onEpisodesLoadClick(work1, schedule1) {
            var episodes1 = null;
            $('.selectCb').each(function (i, item) {
                var id = $(this).attr('id');
                if ($('#' + id).is(':checked')) {
                    if (episodes1 === null) {
                        episodes1 = id;
                    }
                    else {
                        episodes1 = episodes1 + ";" + id;
                    }
                };
            });
            $.ajax({
                url: '@Url.Action("loadEpisodesToSchedule", "scheduling")',
                type: 'GET',
                data: { work: work1, schedule: schedule1, episodes: episodes1 },
                success: function (result) {
                    $('#details').html(result);
                    $('#results').html('Selected Episodes were Successfully Loaded.');
                    $.ajax({
                        url: '@Url.Action("episodesList", "scheduling")',
                        type: 'GET',
                        data: { sch: schedule1 },
                        success: function (result) {
                            $('#epList').html(result);
                        }
                    });
                    $.ajax({
                        url: '@Url.Action("studiosList", "scheduling")',
                        type: 'GET',
                        data: { sch: schedule1 },
                        success: function (result) {
                            $('#stdList').html(result);
                        }
                    });
                },
                error: function (result) {
                    $('#results').html('Unable to Load Episodes. Try Later.');
                }
            })
        }
        function onEpisodeRemoveClick(ep) {
            if (confirm("Please Confirm! About to Remove the Episode from Schedule.")) {
                $.ajax({
                    url: '@Url.Action("episodesDelete", "scheduling")',
                    type: 'GET',
                    data: { id: ep },
                    success: function (result) {
                        $('#epList').html(result);
                    },
                    error: function (result) {
                        alert("Failed to Remove Episode from Schedule.");
                    }
                });
            }
        }

        // studios
        function onStudioAllocationClick(schedule1, studio1) {
            $.ajax({
                url: '@Url.Action("studioAllocationList", "scheduling")',
                type: 'GET',
                data: { schedule: schedule1, studio: studio1 },
                success: function (result) {
                    $('#details').html(result);
                }
            });
        }
        function onStudioAllocationAddNewClick(schedule1, studio1) {
            $.ajax({
                url: '@Url.Action("studioAllocationAddNew", "scheduling")',
                type: 'GET',
                data: { schedule: schedule1, studio: studio1 },
                success: function (result) {
                    $('#details').html(result);
                }
            });
        }
        function onDefaultTeamClick(schedule1, role1) {
            if ($('#work').val() !== '') {
                $.ajax({
                    url: '@Url.Action("getDefaultStudioTeam", "scheduling")',
                    type: 'GET',
                    data: { work: $('#work').val(), schedule: schedule1, role: role1 },
                    success: function (result) {
                        alert(result);
                    }
                });
            }
            else {
                alert("Work Must be Selected Before Requesting Default Studio Team.");
            }
        }

        //studio allocation
        function onAllocationSuccess(ajaxContext) {
            $('#details').html(ajaxContext);
        }
        function onAllocationFailure(ajaxContext) {
            $('#result').html(ajaxContext);
        }
        function onAllocationComplete(schedule1) {
            $.ajax({
                url: '@Url.Action("episodesList", "scheduling")',
                type: 'GET',
                data: { sch: schedule1 },
                success: function (result) {
                    $('#epList').html(result);
                }
            });
            $.ajax({
                url: '@Url.Action("studiosList", "scheduling")',
                type: 'GET',
                data: { sch: schedule1 },
                success: function (result) {
                    $('#stdList').html(result);
                }
            });
        }
        function onStudioAllocationDeleteClick(id1, schedule1) {
            $.ajax({
                url: '@Url.Action("studioAllocationDelete", "scheduling")',
                type: 'GET',
                data: { id: id1 },
                success: function (result) {
                    $('#details').html(result);
                    $.ajax({
                        url: '@Url.Action("episodesList", "scheduling")',
                        type: 'GET',
                        data: { sch: schedule1 },
                        success: function (result) {
                            $('#epList').html(result);
                        }
                    });
                    $.ajax({
                        url: '@Url.Action("studiosList", "scheduling")',
                        type: 'GET',
                        data: { sch: schedule1 },
                        success: function (result) {
                            $('#stdList').html(result);
                        }
                    });
                },
                error: function (result) {
                    alert('Unable to Remove Studio Allocation. Appointments are Given for this Studio. Please Delete Appointments and Retry Again.');
                }
            });
        }
        function onStudioEpisodeAllocationToggleClick(id1) {
            $.ajax({
                url: '@Url.Action("studioEpisodeAllocationToggle", "scheduling")',
                type: 'GET',
                data: { id: id1 },
                success: function (result) {
                    $('#epList').html(result);
                }
            })
        }
    </script>

}
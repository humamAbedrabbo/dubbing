@model dubbingModel.studio

<div class="container-fluid">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label><small>Studio Allocation</small></label>
                </div>
                <div class="col-sm-2 pull-right">
                    <button class="btn btn-default btn-xs" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("studioAllocationAddNew", "scheduling", new { schedule = ViewBag.schedule, studioNo = ViewBag.studio },
                                new AjaxOptions()
                                {
                                    HttpMethod = "POST",
                                    OnSuccess = "onAllocationSuccess",
                                    OnFailure = "onAllocationFailure",
                                    OnComplete = "onAllocationComplete(" + ViewBag.schedule + ")"
                                }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.workIntno, "Work", htmlAttributes: new { @class = "control-label" })</small>
                    <div class="col-sm-12">
                        <small>
                            @Html.DropDownListFor(model => model.workIntno, ViewBag.worksList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.workIntno, "", new { @class = "text-danger" })
                        </small>
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.supervisor, "Supervisor", htmlAttributes: new { @class = "control-label" })</small>
                    <div class="col-sm-12">
                        <small>
                            @Html.DropDownListFor(model => model.supervisor, ViewBag.studioTeamList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.supervisor, "", new { @class = "text-danger" })
                        </small>
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.sound, "Sound Technician", htmlAttributes: new { @class = "control-label" })</small>
                    <div class="col-sm-12">
                        <small>
                            @Html.DropDownListFor(model => model.sound, ViewBag.studioTeamList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.sound, "", new { @class = "text-danger" })
                        </small>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-8">
                        <button type="submit" class="btn btn-default btn-sm">Submit</button>
                        <small><label class="alert-success" id="result"></label></small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@model dubbingModel.studioDtl

<div class="container-fluid">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                @{ string work = @ViewBag.work; }
                <div class="col-sm-10">
                    <label><small>Studio Allocation for: @work.Split('|')[1]</small></label>
                </div>
                <div class="col-sm-2 pull-right">
                    <button class="btn btn-default btn-xs" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @{
                string studio = ViewBag.studio;
                if (!string.IsNullOrEmpty(studio))
                {
                    <p>
                        <label class="alert-info">
                            <small>The Default Allocation for the Selected Work will be:</small>
                        </label>
                        <span><small> @studio.Split('|')[0] / Studio: @studio.Split('|')[1]</small></span>
                        <span>
                            <button class="btn btn-xs btn-info" onclick="onDefaultAllocateClick()"><small>Allocate Default</small></button>
                        </span>
                    </p>
                    <p>
                        <label><small>You Can Override the Default By Selecting Different Studio from the Below List.</small></label>
                    </p>
                }
            }

            @using (Ajax.BeginForm("allocateWorkToStudio", "scheduling", new { work = work.Split('|')[0], sch = ViewBag.schedule },
                                new AjaxOptions()
                                {
                                    HttpMethod = "POST",
                                    OnSuccess = "onAllocationSuccess",
                                    OnFailure = "onAllocationFailure"
                                },
                                new { id = "allocationForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group-sm">
                    <div class="col-sm-12">
                        <small>
                            @Html.DropDownListFor(model => model.studioIntno, ViewBag.studiosList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                        </small>
                    </div>
                </div>

                <div class="form-group-sm">
                    <div class="col-sm-12">
                        <label><small>Is Default</small></label>
                        <small>
                            @Html.CheckBoxFor(model => model.isDefault, new { htmlAttributes = new { @class = "form-control" } })
                        </small>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-8">
                        <button type="submit" class="btn btn-default btn-sm">Submit</button>
                        <small><label class="alert-success" id="result"></label></small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
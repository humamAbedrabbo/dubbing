@model dubbingModel.employee

@using (Ajax.BeginForm("personnelAddNew", "admin", new { empType = ViewBag.empType },
                                            new AjaxOptions()
                                            {
                                                HttpMethod = "POST",
                                                UpdateTargetId = "result"
                                            }
                                            ))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.fullName, "Name", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.othFullName, "Other Name", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.othFullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.othFullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.empUID, "Employee UID", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.empUID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.empUID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.mobileNo, "Mobile", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.mobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.landLineNo, "Landline", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.landLineNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.landLineNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.email, "email", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-sm">
        <small>@Html.LabelFor(model => model.accountNo, "Account No", htmlAttributes: new { @class = "control-label" })</small>
        <div>
            @Html.EditorFor(model => model.accountNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.accountNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <br />
    <div class="form-group-sm">
        <button type="submit" class="btn btn-default btn-sm pull-left">Submit</button>
        &nbsp;
        <a class="btn btn-default btn-sm pull-right" onclick="onDismissClick()" role="button">Dismiss</a>
        <label class="alert-success" id="result"></label>
    </div>
}
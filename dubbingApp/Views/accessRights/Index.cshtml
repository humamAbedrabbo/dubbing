@{
    ViewBag.Title = "Access Rights";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="jumbotron" style="padding:5px">
        <h2>Access Rights</h2>
        <p class="lead"><h5>Maintain Users List and their Access Rights through Assigning Users to Predefined Roles.</h5></p>
        <p><a href="#" class="btn btn-primary" onclick="onNewUserClick()">Register New User &raquo;</a></p>
    </div>
    <div class="row">
        <div class="col-sm-3" id="rolesList">
            <div class="container-fluid" style="padding:0px">
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-12">
                                <small><label>Users</label></small>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body" style="padding:5px">
                        <input type="hidden" id="filterTypeHF" />
                        <ul>
                            <li><a href="#" class="filterLbl badge" id="fl01" onclick="onFilterClick('01')"><small>All ...</small></a></li>
                            <li><a href="#" class="filterLbl" id="fl02" onclick="onFilterClick('02')"><small>Un Authenticated</small></a></li>
                            <li><a href="#" class="filterLbl" id="fl03" onclick="onFilterClick('03')"><small>Un Authorized</small></a></li>
                        </ul>
                    </div>
                </div>
            </div>
            @Html.Action("rolesList", "accessRights")
        </div>
        <div class="col-sm-9" id="usersList">
            @Html.Action("usersList", "accessRights", new { filterType = "01" })
        </div>
        <div class="col-sm-3" id="userDetails"></div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function showDetails() {
            $('#usersList').removeClass('col-sm-9').addClass('col-sm-6');
        }

        function onFilterClick(filterType1) {
            $('#filterTypeHF').val(filterType1);
            $('.roleLbl').removeClass('badge');
            $('.filterLbl').removeClass('badge');
            $('#fl' + filterType1).addClass('badge');
            $('#userDetails').html(null);

            $.ajax({
                url: '@Url.Action("usersList", "accessRights")',
                type: 'GET',
                data: { filterType: filterType1 },
                success: function (result) {
                    $('#usersList').html(result);
                }
            })
        }

        function onRoleClick(role1) {
            $('.filterLbl').removeClass('badge');
            $('.roleLbl').removeClass('badge');
            $('#' + role1).addClass('badge');
            $('#userDetails').html(null);
            $.ajax({
                url: '@Url.Action("usersInRoleList", "accessRights")',
                type: 'GET',
                data: { role: role1 },
                success: function (result) {
                    $('#usersList').html(result);
                }
            })
        }

        function onGrantUserClick(role1) {
            showDetails();
            $.ajax({
                url: '@Url.Action("grantRoleToUser", "accessRights")',
                type: 'GET',
                data: { role: role1 },
                success: function (result) {
                    $('#userDetails').html(result);
                }
            })
        }

        function onRevokeUserClick(user1, role1) {
            if (confirm('Please Confirm! About to Revoke Role from the Selected User.')) {
                $.ajax({
                    url: '@Url.Action("revokeRoleFromUser", "accessRights")',
                    type: 'GET',
                    data: { user: user1, role: role1 },
                    success: function (result) {
                        $('#usersList').html(result);
                    }
                })
            }
        }

        function onNewUserClick() {
            showDetails();
            $.ajax({
                url: '@Url.Action("usersAddNew", "accessRights")',
                type: 'GET',
                success: function (result) {
                    $('#userDetails').html(result);
                }
            })
        }

        function onUserClick(user1) {
            showDetails();
            $.ajax({
                url: '@Url.Action("usersUpdate", "accessRights")',
                type: 'GET',
                data: { user: user1 },
                success: function (result) {
                    $('#userDetails').html(result);
                }
            })
        }

        function onSubmitClick(e) {
            if(!confirm('Please Confirm! About to make Changes to User.'))
            {
                e.preventDefault();
            }
        }

        function onCloseClick() {
            $('#usersList').removeClass('col-sm-6').addClass('col-sm-9');
            $('#userDetails').html(null);
        }
        function onSuccess() {
            $('#formResult').html('Successfully Added/Updated.');
        }
        function onUpdateSuccess() {
            var ft = $('#filterTypeHF').val();
            $.ajax({
                    url: '@Url.Action("usersList", "accessRights")',
                    type: 'GET',
                    data: { filterType: ft },
                    success: function (result) {
                        $('#usersList').html(result);
                        $('.filterLbl').removeClass('badge');
                        $('#fl' + ft).addClass('badge');
                    }
                })
        }
    </script>
}
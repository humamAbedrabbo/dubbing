@model dubbingModel.workOrder

<div class="container-fluid">
    <div class="panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>Enter New Order</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("orderAddNew", "orders",
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    UpdateTargetId = "formResult",
                                                    OnSuccess = "onSuccess"
                                                }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.clientIntno, "Client", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        @Html.DropDownListFor(model => model.clientIntno, ViewBag.clientsList as SelectList, "Select Client ...", htmlAttributes: new { @class = "form-control", onchange = "onClientComboChanged()", @id = "clientCombo" })
                        @Html.ValidationMessageFor(model => model.clientIntno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.workIntno, "Work", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        @Html.DropDownListFor(model => model.workIntno, ViewBag.worksList as SelectList, "Select Work ...", htmlAttributes: new { @class = "form-control", id = "workCombo" })
                        @Html.ValidationMessageFor(model => model.workIntno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.fromEpisode, "From Episode", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.fromEpisode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fromEpisode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.thruEpisode, "Thru Episode", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.thruEpisode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.thruEpisode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.receivedDate, "Received Date", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        <input type="date" name="receivedDate" class="form-control" />
                        @Html.ValidationMessageFor(model => model.receivedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.remarks, "Remarks", htmlAttributes: new { @class = "control-label col-sm-12" })</small>
                    <div class="col-sm-12">
                        @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <div class="col-sm-12">
                        <button type="submit" class="btn btn-default btn-sm">Submit</button>
                        <label class="alert-success" id="formResult"></label>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
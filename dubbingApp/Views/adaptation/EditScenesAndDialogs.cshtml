
@using dubbingModel
@using dubbingApp.Models
@model IEnumerable<subtitle>

@{
    ViewBag.Title = "Edit Scenes And Dialogs";
}

<div>
    <h2>@ViewBag.Episode</h2>
    <a role="button" class="btn btn-xs btn-default pull-right" href="#" onclick="getCharactersList(@ViewBag.order)" data-toggle="modal" data-target="#renameCharacterModal">Rename Character</a>
    <a role="button" class="btn btn-xs btn-default pull-right" href="#" data-toggle="modal" data-target="#replaceTextModal">Replace Text</a>
</div>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>Scene</th>
            <th>Dialog</th>
            <th>New Scene</th>
            <th>New Dialog</th>
            <th>S/No</th>
            <th>Start</th>
            <th>End</th>
            <th>Character</th>
            <th>Subtitle</th>
            <th></th>

        </tr>
    </thead>
    <tbody>
        @foreach(var s in Model)
        {
            <tr>
                <td>@s.dialog.scene.sceneNo</td>
                <td>@s.dialog.dialogNo</td>
                <td class="col-md-1">
                    <select class="form-control" id="scene_@s.subtitleIntno" onchange="refreshDialogs(@s.subtitleIntno)">
                        <option value="0">New</option>
                        @foreach (var scene in (ViewBag.Scenes as List<scene>))
                        {
                            if (s.dialog.sceneIntno == scene.sceneIntno)
                            {
                                <option value="@scene.sceneIntno" selected>@scene.sceneNo</option>
                            }
                            else
                            {
                                <option value="@scene.sceneIntno">@scene.sceneNo</option>
                            }
                        }
                    </select>
                </td>
                <td class="col-md-1">
                    <select class="form-control" id="dlg_@s.subtitleIntno">
                        <option value="0">New</option>
                        @foreach (var dlg in (ViewBag.Dialogs as List<dialog>).Where(x => x.sceneIntno == s.dialog.sceneIntno))
                        {
                            if (s.dialogIntno == dlg.dialogIntno)
                            {
                                <option value="@dlg.dialogIntno" selected>@dlg.dialogNo</option>
                            }
                            else
                            {
                                <option value="@dlg.dialogIntno">@dlg.dialogNo</option>
                            }
                        }
                    </select>
                </td>
                <td>@s.subtitleNo</td>
                <td>@s.startTimeCode</td>
                <td>@s.endTimeCode</td>
                <td>@s.dubbingSheetHdr.characterName</td>
                <td>@s.scentence</td>
                <td><a class="btn btn-primary" href="javascript:saveSubtitle(@s.dialog.scene.orderTrnHdrIntno, @s.subtitleIntno);">Save</a></td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="replaceTextModal" tabindex="-1" role="dialog" aria-labelledby="replaceTextModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="replaceTextModal-label"><small>Replace Text in Subtitles</small></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-9 input-group" style="padding:10px">
                        <span class="input-group-addon"><label><small>Find Text: </small></label></span>
                        <input id="findText" class="form-control" dir="rtl" required autofocus />
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-9 input-group" style="padding:10px">
                        <span class="input-group-addon"><label><small>Replace With: </small></label></span>
                        <input id="replaceWith" class="form-control" dir="rtl" required />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="onClose()">Done</button>
                <button type="button" class="btn btn-primary" onclick="onReplaceClick()">Replace All</button>
                <div><label class="pull-left" id="replaceTextModalResult"></label></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="renameCharacterModal" tabindex="-1" role="dialog" aria-labelledby="renameCharacterModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="renameCharacterModal-label"><small>Rename Character in Episode</small></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-9 input-group" style="padding:10px">
                        <span class="input-group-addon"><label><small>Find Character</small></label></span>
                        @{ SelectList cList1 = new SelectList(Model.Select(b => new { b.dubbingSheetHdr.dubbSheetHdrIntno, b.dubbingSheetHdr.characterName }).Distinct(), "dubbSheetHdrIntno", "characterName"); }
                        @Html.DropDownList("sheetHdrsList", cList1, "Select from list ...", htmlAttributes: new { @class = "form-control", required = "true", autofocus = "" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-9 input-group" style="padding:10px">
                        <span class="input-group-addon"><label><small>Rename To*</small></label></span>
                        <input type="text" class="form-control" id="toCharacterName" />
                    </div>
                </div>
                <div><small>(*) Use this to Change the Name of a Secondary Character</small></div>
                <div class="row">
                    <div class="col-sm-9 input-group" style="padding:10px">
                        <span class="input-group-addon"><label><small>Replace With**</small></label></span>
                        @{ SelectList cList2 = new SelectList("", "workCharacterIntno", "characterName"); }
                        @Html.DropDownList("toCharacterList", cList2, "Select Character ...", htmlAttributes: new { @class = "form-control", required = "true" })
                    </div>
                </div>
                <div><small>(**) Use this to Replace with an ALREADY DEFINED Main Character</small></div>
                <div class="row">
                    <div class="col-sm-9" style="padding:10px">
                        <input type="checkbox" id="isSubtitle" checked />
                        <label><small>Replace Character Citations in Subtitles As Well.</small></label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="onClose()">Done</button>
                <button type="button" class="btn btn-primary" onclick="onRenameClick()">Rename All</button>
                <div><label class="pull-left" id="renameCharacterModalResult"></label></div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        function fillDialogs(subtitleIntno, sceneIntno) {
            var url = '/adaptation/SceneDialogs';
            $.ajax({
                url: url,
                data: { sceneIntno: sceneIntno },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    var html = '<option value="0">New</option>';
                    for(var x = 0; x < result.length; x++)
                    {
                        html = html + '<option value="' + result[x].dialogIntno +  '">' + result[x].dialogNo + '</option>';
                    }
                    $("#dlg_" + subtitleIntno).empty();
                    $("#dlg_" + subtitleIntno).html(html);
                }
            });
        }
        function refreshDialogs(subtitleIntno) {
            var sceneIntno = $("#scene_" + subtitleIntno).val();
            if (sceneIntno == 0) {
                $("#dlg_" + subtitleIntno).empty();
                var html = '<option value="0">New</option>';
                $("#dlg_" + subtitleIntno).html(html);
            } else {
                fillDialogs(subtitleIntno, sceneIntno);
            }

        }

        function saveSubtitle(orderTrnHdrIntno, subtitleIntno) {
            var url = '/adaptation/ChangeDialog';
            var dialogIntno = $("#dlg_" + subtitleIntno).val();
            var sceneIntno = $("#scene_" + subtitleIntno).val();

            $.ajax({
                url: url,
                method: 'GET',
                data: { orderTrnHdrIntno: orderTrnHdrIntno, subtitleIntno: subtitleIntno, dialogIntno: dialogIntno, sceneIntno: sceneIntno },
                success: function () {
                    window.location.reload();
                }
            });
        }
        $(function () {

        });

        //added by wael
        function getCharactersList(oi) {
            $.ajax({
                url: '@Url.Action("popoulateCharactersCombo", "adaptation")',
                type: 'POST',
                data: { id: oi },
                dataType: 'json',
                success: function (characters) {
                    $.each(characters, function (i, item) {
                        $("#toCharacterList").append('<option value="' + item.Value + '">' +
                        item.Text + '</option>');
                    });
                }
            });
            return false;
        }
        function onReplaceClick() {
            if(confirm("Please Confirm! About to perform permenant Text Replacement?")) {
                $.ajax({
                    url: '@Url.Action("ReplaceText", "adaptation")',
                    type: 'GET',
                    data: { id: @ViewBag.order, findText: $('#findText').val(), replaceWith: $('#replaceWith').val() },
                    success: function (result) {
                        $('#replaceTextModalResult').html(result);
                    }
                })
            }
        }
        function onRenameClick() {
            if(confirm("Please Confirm! About to perform permenant Character Renaming?")) {
                $.ajax({
                    url: '@Url.Action("RenameCharacter", "adaptation")',
                    type: 'GET',
                    data: { dubbSheetHdrIntno: $('#sheetHdrsList').val(), toCharacterName: $('#toCharacterName').val(), toCharacterIntno: $('#toCharacterList').val(), isSubtitle: $('#isSubtitle').prop('checked') },
                    success: function (result) {
                        $('#renameCharacterModalResult').html(result);
                    }
                })
            }
        }
        function onClose() {
            window.location.reload();
        }
    </script>
}
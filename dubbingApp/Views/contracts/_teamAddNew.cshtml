@model dubbingModel.workPersonnel

<div class="container-fluid" style="padding:0px">
    <div class="panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>Add New Personnel</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onNewPersonnelCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("teamAddNew", "contracts", new { id = ViewBag.workIntno },
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    UpdateTargetId = "formResult",
                                                    OnSuccess = "onTeamSuccess(" + ViewBag.workIntno + ")" 
                                                },
                                                new { @class = "form-horizontal" }
                                                ))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.titleType, "Role", htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(model => model.titleType, new SelectList(ViewBag.titleTypesList, "key", "value"), "Select Role ...", htmlAttributes: new { @class = "form-control", onchange = "onTitlesComboChanged()", @id = "titlesCombo" })
                        @Html.ValidationMessageFor(model => model.titleType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.empIntno, "Personnel", htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(model => model.empIntno, ViewBag.personnelList as SelectList, string.Empty, htmlAttributes: new { @class = "form-control", @id = "personnelCombo" })
                        @Html.ValidationMessageFor(model => model.empIntno, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fromDate, "From Date", htmlAttributes: new { @class = "control-label col-sm-4" })
                    <div class="col-sm-8">
                        <input type="date" name="fromDate" class="form-control" />
                        @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-4 col-sm-8">
                        <button type="submit" class="btn btn-default btn-sm">Submit</button>
                        <label class="alert-success" id="formResult"></label>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
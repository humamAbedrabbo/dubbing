@model dubbingModel.agreementSpec

<div class="container-fluid">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-sm-10">
                    <label>Add New Specification</label>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default btn-xs pull-right" onclick="onCloseClick()" title="Close">
                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="panel-body">
            @using (Ajax.BeginForm("specsAddNew", "agreements", new { id = ViewBag.agreementIntno, sType = ViewBag.specsType },
                                                new AjaxOptions()
                                                {
                                                    HttpMethod = "POST",
                                                    UpdateTargetId = "result",
                                                    OnSuccess = "onSpecsSuccess(" + ViewBag.agreementIntno + ")"
                                                },
                                                new { @class = "form-horizontal" }
                                                ))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.specsSubtype, "Specification", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @Html.DropDownListFor(model => model.specsSubtype, new SelectList(ViewBag.specsSubtypesList, "key", "value"), string.Empty, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.specsSubtype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <small>@Html.LabelFor(model => model.specsValue, "Requirement", htmlAttributes: new { @class = "control-label" })</small>
                    <div>
                        @Html.EditorFor(model => model.specsValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.specsValue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group-sm">
                    <button type="submit" class="btn btn-default btn-sm">Submit</button>
                    <small><label class="alert-success" id="result"></label></small>
                </div>
            }
        </div>
    </div>
</div>
